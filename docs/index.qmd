---
title: "Polars Eval Metrics"
---

# Welcome to Polars Eval Metrics

[![Tests](https://github.com/elong0527/demo_eval_metric/actions/workflows/test.yml/badge.svg)](https://github.com/elong0527/demo_eval_metric/actions/workflows/test.yml)
[![Documentation](https://github.com/elong0527/demo_eval_metric/actions/workflows/docs.yml/badge.svg)](https://github.com/elong0527/demo_eval_metric/actions/workflows/docs.yml)

A high-performance model evaluation framework built on Polars lazy evaluation.

## Features

- **Fast**: Leverages Polars lazy evaluation for optimal performance
- **Flexible**: Support for custom metrics and expressions
- **Registry-based**: Extensible registry system for errors, metrics, and summaries
- **Context Isolation**: Create isolated registries for different evaluation contexts
- **Type-safe**: Pydantic models with validation
- **Simple**: Clean API with sensible defaults
- **Extensible**: Easy to add new metrics and aggregation types

## Quick Start

```python
from polars_eval_metrics import MetricEvaluator, MetricDefine, MetricRegistry

# Use built-in metrics
evaluator = MetricEvaluator(
    df=data,
    metrics=[
        MetricDefine(name='mae'),
        MetricDefine(name='rmse')
    ],
    ground_truth="actual",
    estimates=["model1", "model2"],
    group_by=["treatment"]
)

results = evaluator.evaluate()
```

## Custom Metrics

```python
# Create a custom registry
registry = MetricRegistry()

# Register custom error and metric
registry.register_error('within_tolerance', 
    lambda est, gt: (pl.col(est) - pl.col(gt)).abs() <= 1.0)
    
registry.register_metric('accuracy',
    pl.col('within_tolerance').mean() * 100)

# Use custom registry in evaluation
evaluator = MetricEvaluator(
    df=data,
    metrics=[MetricDefine(name='accuracy')],
    registry=registry  # Pass custom registry
)
```

## Installation

To use this package, make sure it's in your Python path:

```bash
# If running from the repository
export PYTHONPATH=/path/to/repo/src:$PYTHONPATH

# Or install in development mode
pip install -e .
```

## Documentation

- [Quick Start](quickstart.qmd) - Installation and basic concepts
- [Metric Examples](metric.qmd) - Detailed examples and use cases