name: Build and Deploy Documentation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install polars pydantic pyyaml numpy jupyter ipykernel nbformat nbclient
          pip install pytest pytest-cov
          python -m ipykernel install --user --name=python3
          # Install package in development mode
          pip install -e .
          # Add src to Python path for imports
          echo "PYTHONPATH=${{ github.workspace }}/src:$PYTHONPATH" >> $GITHUB_ENV
          
      - name: Run tests with coverage
        run: |
          # Generate coverage report directly in docs/coverage directory (like rtflite)
          pytest tests/ --cov=src/polars_eval_metrics --cov-report=html:docs/coverage --cov-report=term
          echo "Coverage report generated at docs/coverage"
          
      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2
          
      - name: Build documentation
        run: |
          # Set PYTHONPATH to include the src directory
          export PYTHONPATH="${{ github.workspace }}/src:$PYTHONPATH"
          echo "PYTHONPATH: $PYTHONPATH"
          echo "Current directory: $(pwd)"
          echo "GitHub workspace: ${{ github.workspace }}"
          echo "Contents of src directory:"
          ls -la src/
          echo "Testing Python import:"
          python -c "import sys; sys.path.insert(0, 'src'); import polars_eval_metrics; print('Package imported successfully')"
          cd docs
          echo "Changed to docs directory: $(pwd)"
          # Build the documentation with Quarto
          quarto render --to html --execute
          
          # Verify coverage report is included
          if [ -d "coverage" ]; then
            echo "Coverage report found at docs/coverage"
            ls -la coverage/ | head -5
          else
            echo "Warning: Coverage report not found"
          fi
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_site
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4