name: Python Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install polars pydantic pyyaml plotnine
        # Install the package in development mode
        pip install -e .
        
    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=src/polars_eval_metrics --cov-report=xml --cov-report=term
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff black mypy
        pip install polars pydantic pyyaml plotnine types-pyyaml
        pip install -e .
        
    - name: Run ruff
      run: |
        ruff check src/ tests/
        
    - name: Run black
      run: |
        black --check src/ tests/
        
    - name: Run mypy
      run: |
        mypy src/polars_eval_metrics || true  # Allow mypy to fail for now